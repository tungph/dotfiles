;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/src/karabiner_configurator/keys_info.clj
{;; !    | means mandatory
;; #  | means optional
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; need to prefix C T O S F with ! or #

  :profiles
  {:goku {:default true
          :sim     50 ;; default: 50
          :delay   0
          :alone   1000 ;; default: 1000
          :held    500 ;; default: 500
          }}
   :templates {:launch     "osascript -e 'tell application \"Alfred 4\" to run trigger \"launch%s\" in workflow \"yqrashawn.workflow.launcher\" with argument \"\"'"
               :alf        "open /Applications/Alfred\\ 4.app && osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\"'"
               :km         "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
               :kb-maestro "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
               :open       "open \"%s\""
               :opena      "open -a \"%s\""
               :show       "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'\n"
               :toggle     "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else if frontmost of process appName then\n    set visible of process appName to false\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'"
               :type       "osascript -e 'tell application \"System Events\" to keystroke \"%s\" as text'"
               ;; :focus      "/usr/local/bin/yabai -m display --focus \"%s\" & /usr/local/bin/yabai -m space --focus \"%s\""
               }
  :applications {:firefox   ["^org\\.mozilla.*"]
                 :edge      ["^com\\.microsoft\\.edgemac"]
                 :jetbrains ["^com\\.jetbrains.*"]
                 :finder    ["^com\\.apple\\.finder$"]
                 :terminals ["com\\.apple\\.Terminal",
                             "com\\.googlecode\\.iterm2"]}
  :layers       {
                 :tab-layer {:key :tab :alone [:key :escape]}
                 :caps-layer {:key :caps_lock }
                 }
  :main [
      {:des   "Tab layer"
       :rules [:tab-layer
          [:e [:opena "edge"]][:r [:opena "Adobe Acrobat Reader DC"]][:i [:opena "iTerm"]][:o [:opena "preview"]][:p [:opena "pycharm"]]
          [:s [:opena "slack"]] [:d [:opena "finder"]] [:f [:opena "firefox"]][:g [:opena "github"]][:j :!CStab] [:k :!Ctab]
          [:c [:opena "calendar"]][:n [:opena "notes"]]
       ]}

      {:des   "CapsLock layer"
       :rules [:caps-layer
            [:u :!S8][:i :!Sequal_sign][:##i :##equal_sign][:o :hyphen] [:##o :##hyphen][:p :equal_sign]
            [:h :!Shyphen] [:j :!Sopen_bracket] [:k :!Sclose_bracket][:l :open_bracket][:semicolon :close_bracket][:quote :!Oup_arrow]
            [:v :!Oup_arrow] [:n :!S1]
            [:spacebar :!Ttab]

            [:return_or_enter :!Cs] ;; control + s
            [:!Creturn_or_enter :!CSs] ;; control + shift + s
       ]}

       {:des   "Personal Shortcuts"
        :rules [
             [:delete_or_backspace :!TCf] [:!Cdelete_or_backspace :!TCq]
             [:open_bracket :!Ssemicolon] [:!Sopen_bracket :semicolon] [:close_bracket :!S5] [:!Sclose_bracket :!S6]

             [:!Rcaps_lock :!Rgrave_accent_and_tilde] [:!Ccaps_lock :grave_accent_and_tilde]

             [:##semicolon :##delete_or_backspace]
             [:quote :!Cf [:firefox]] [:quote :!Cf [:edge]]
             [:!Creturn_or_enter :up_arrow [:!jetbrains]] [:!CSreturn_or_enter :down_arrow [:!jetbrains]] [:!Sreturn_or_enter :end]

             [:!Sspacebar :!Oright_arrow] [:!CSspacebar :!Oleft_arrow]
             [:right_command :!TOCleft_shift] [:right_option :!Cleft_option]
        ]}
  ]}
